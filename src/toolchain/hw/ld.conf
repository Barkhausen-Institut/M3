#include <base/Config.h>

OUTPUT_FORMAT("elf64-littleriscv")

ENTRY(_start)

PHDRS
{
    text    PT_LOAD;
    data    PT_LOAD;
    bss     PT_LOAD;
}

MEMORY
{
#if defined(__pemux__)
    imem (rx):     ORIGIN = PEMUX_CODE_START, LENGTH = PEMUX_CODE_SIZE
    dmem (!rx):    ORIGIN = PEMUX_DATA_START, LENGTH = PEMUX_DATA_SIZE
#elif defined(__baremetal__)
    imem (rx):     ORIGIN = PEMUX_CODE_START, LENGTH = APP_CODE_SIZE + PEMUX_CODE_SIZE
    dmem (!rx):    ORIGIN = PEMUX_DATA_START, LENGTH = APP_DATA_SIZE + PEMUX_DATA_SIZE
#else
    imem (rx):     ORIGIN = APP_CODE_START, LENGTH = APP_CODE_SIZE
    dmem (!rx):    ORIGIN = APP_DATA_START, LENGTH = APP_DATA_SIZE
#endif
}

SECTIONS
{
    .text :
    {
        PROVIDE(_text_start = .);
        KEEP (*(SORT_NONE(.init)))
        *(.text*)
        *(.ARM.extab.text*)

#if defined(__isr__)
        . = ALIGN(0x1000);
        PROVIDE(_user_start = .);
        *(.user_text)
        PROVIDE(_user_end = .);
        . = ALIGN(0x1000);
#endif
    } > imem : text

    .rodata :
    {
        *(.rodata*)
        *(.srodata*)
        *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
        PROVIDE(_text_end = .);
    } > imem : text

    .data :
    {
        PROVIDE(_data_start = .);
        *(.data)
        *(.data.*)
        *(.sdata .sdata.* .sdata2.* .gnu.linkonce.s.*)
        *(.got.plt*)
        *(.got)
    } > dmem : data

    .eh_frame           : { KEEP (*(.eh_frame)) *(.eh_frame.*) } > dmem : data
    .gcc_except_table   : { *(.gcc_except_table .gcc_except_table.*) } > dmem : data

    .ctors :
    {
        CTORS_BEGIN = .;
        KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))
        KEEP (*(.init_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .ctors))
        CTORS_END = .;
        PROVIDE(_data_end = .);
    } > dmem : data

    .bss ALIGN(0x1000) :
    {
        PROVIDE(_bss_start = .);
#if defined(__isr__) || defined(__baremetal__) || defined(__pemux__)
        . = . + 1; . = ALIGN(STACK_SIZE);
#   if defined(__isr__)
        . = . + 1; . = ALIGN(STACK_SIZE);
        PROVIDE(isr_stack = .);
#   endif
#   if defined(__baremetal__) || defined(__pemux__)
        . = . + 1; . = ALIGN(STACK_SIZE);
        PROVIDE(baremetal_stack = .);
#   endif
#endif
        *(COMMON*)
        *(.bss*)
        *(.sbss .sbss.* .gnu.linkonce.sb.*)
        PROVIDE(_bss_end = .);
    } > dmem : bss
}
