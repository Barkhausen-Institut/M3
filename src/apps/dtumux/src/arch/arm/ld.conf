OUTPUT_FORMAT("elf32-littlearm")

ENTRY(_start)

PHDRS
{
    text    PT_LOAD;
    data    PT_LOAD;
    vectors PT_LOAD AT(0x0) FLAGS(0x7);
}

SECTIONS
{
    .vectors :
    {
        /* generate vector table */
        LONG(0xEA000000 | (entry_0 - (8 + 4 * 0) >> 2));
        LONG(0xEA000000 | (entry_1 - (8 + 4 * 1) >> 2));
        LONG(0xEA000000 | (entry_2 - (8 + 4 * 2) >> 2));
        LONG(0xEA000000 | (entry_3 - (8 + 4 * 3) >> 2));
        LONG(0xEA000000 | (entry_4 - (8 + 4 * 4) >> 2));
        LONG(0xE320F000);  /* nop */
        LONG(0xEA000000 | (entry_6 - (8 + 4 * 6) >> 2));
        LONG(0xEA000000 | (entry_7 - (8 + 4 * 7) >> 2));
    } : vectors = 0xE320F000

    /* put the RCTMUX_FLAGS at a fixed address */
    .data 0x100000 :
    {
        *(.rctmux*)
        *(.data*)
        *(.got.plt*)
        *(COMMON*)
        *(.bss*)
        PROVIDE(_bss_end = .);
    } : data

    .text ALIGN(0x1000) :
    {
        *(.text*)
    } : text = 0x90909090

    .rodata :
    {
        *(.rodata*)
    } : text

    .ARM.exidx :
    {
        __exidx_start = .;
        *(.ARM.exidx* .gnu.linkonce.armexidx.*)
        __exidx_end = .;
    } : text
}
