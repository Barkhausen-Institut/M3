OUTPUT_FORMAT("elf32-littlearm")

ENTRY(_start)

PHDRS
{
    text    PT_LOAD;
    data    PT_LOAD;
    flags   PT_LOAD;
    vectors PT_LOAD AT(0x0) FLAGS(0x7);
}

SECTIONS
{
    .vectors :
    {
        /* generate vector table */
        LONG(0xEA000000 | (entry_0 - (8 + 4 * 0) >> 2));
        LONG(0xEA000000 | (entry_1 - (8 + 4 * 1) >> 2));
        LONG(0xEA000000 | (entry_2 - (8 + 4 * 2) >> 2));
        LONG(0xEA000000 | (entry_3 - (8 + 4 * 3) >> 2));
        LONG(0xEA000000 | (entry_4 - (8 + 4 * 4) >> 2));
        LONG(0xE320F000);  /* nop */
        LONG(0xEA000000 | (entry_6 - (8 + 4 * 6) >> 2));
        LONG(0xEA000000 | (entry_7 - (8 + 4 * 7) >> 2));
    } : vectors = 0xE320F000

    . = 0x1000;

    .text :
    {
        *(.text*)
        *(.rodata*)
    } : text = 0x90909090

    .data ALIGN(0x1000) :
    {
        *(.data*)
        *(.got.plt*)
        *(COMMON*)
        *(.bss*)
    } : data

    /* put the RCTMUX_FLAGS at a fixed address */
    .rctmux 0x5ff0 :
    {
        *(.rctmux*)
    } : flags

    /DISCARD/ : {
        *(.ARM.exidx.*)
    }
}
