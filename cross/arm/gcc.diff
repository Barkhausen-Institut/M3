diff -rcN src/gcc-org/libstdc++-v3/config/os/newlib/ctype_base.h src/gcc/libstdc++-v3/config/os/newlib/ctype_base.h
*** src/gcc-org/libstdc++-v3/config/os/newlib/ctype_base.h	2020-05-07 12:50:02.000000000 +0200
--- src/gcc/libstdc++-v3/config/os/newlib/ctype_base.h	2021-05-26 12:24:19.056452358 +0200
***************
*** 28,33 ****
--- 28,43 ----

  // Information as gleaned from /usr/include/ctype.h

+ // musl doesn't define these; copied from newlib
+ #define _U      01
+ #define _L      02
+ #define _N      04
+ #define _S      010
+ #define _P      020
+ #define _C      040
+ #define _X      0100
+ #define _B      0200
+
  namespace std _GLIBCXX_VISIBILITY(default)
  {
  _GLIBCXX_BEGIN_NAMESPACE_VERSION
diff -rcN src/gcc-org/libstdc++-v3/libsupc++/vterminate.cc src/gcc/libstdc++-v3/libsupc++/vterminate.cc
*** src/gcc-org/libstdc++-v3/libsupc++/vterminate.cc	2020-05-07 12:50:02.000000000 +0200
--- src/gcc/libstdc++-v3/libsupc++/vterminate.cc	2021-05-26 12:25:45.407170089 +0200
***************
*** 62,68 ****
  	  int status = -1;
  	  char *dem = 0;
  	  
! 	  dem = __cxa_demangle(name, 0, 0, &status);

  	  fputs("terminate called after throwing an instance of '", stderr);
  	  if (status == 0)
--- 62,69 ----
  	  int status = -1;
  	  char *dem = 0;
  	  
! 	  // disable to prevent that it pulls in a lot of code (~50KiB)
! 	  // dem = __cxa_demangle(name, 0, 0, &status);

  	  fputs("terminate called after throwing an instance of '", stderr);
  	  if (status == 0)
diff -rcN src/gcc-org/libstdc++-v3/src/c++11/Makefile.in src/gcc/libstdc++-v3/src/c++11/Makefile.in
*** src/gcc-org/libstdc++-v3/src/c++11/Makefile.in	2020-05-07 12:50:02.000000000 +0200
--- src/gcc/libstdc++-v3/src/c++11/Makefile.in	2021-05-26 12:26:54.044412064 +0200
***************
*** 821,828 ****
  .PRECIOUS: Makefile


! ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc
! 	$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true

  ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)
  	$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true
--- 821,831 ----
  .PRECIOUS: Makefile


! # explicitly use generic here instead of newlib, because we don't have newlib
! # and therefore are missing _ctype_. however, --with-newlib is required to
! # make it build at all.
! ctype_configure_char.cc: ${glibcxx_srcdir}/config/os/generic/ctype_configure_char.cc
! 	$(LN_S) ${glibcxx_srcdir}/config/os/generic/ctype_configure_char.cc . || true

  ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)
  	$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true
