diff -rcN src/gcc-org/config.sub src/gcc/config.sub
*** src/gcc-org/config.sub	2020-07-11 07:48:23.487535246 +0200
--- src/gcc/config.sub	2020-07-11 07:48:51.834382829 +0200
***************
*** 1343,1349 ****
  	     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \
  	     | sym* | kopensolaris* | plan9* \
  	     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \
! 	     | aos* | aros* | cloudabi* | sortix* \
  	     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \
  	     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \
  	     | knetbsd* | mirbsd* | netbsd* \
--- 1343,1349 ----
  	     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \
  	     | sym* | kopensolaris* | plan9* \
  	     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \
! 	     | aos* | aros* | cloudabi* | sortix* | m3* \
  	     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \
  	     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \
  	     | knetbsd* | mirbsd* | netbsd* \
diff -rcN src/gcc-org/gcc/config/m3.h src/gcc/gcc/config/m3.h
*** src/gcc-org/gcc/config/m3.h	1970-01-01 01:00:00.000000000 +0100
--- src/gcc/gcc/config/m3.h	2020-07-11 07:48:51.834382829 +0200
***************
*** 0 ****
--- 1,29 ----
+ #undef   STARTFILE_SPEC
+ #define STARTFILE_SPEC "%{shared|pie:crt0S.o%s;:crt0.o%s} %{shared:crt1S.o%s;:crt1.o%s} %{shared|pie:crtbeginS.o%s;:crtbegin.o%s}"
+ 
+ #undef   ENDFILE_SPEC
+ #define ENDFILE_SPEC "%{shared|pie:crtendS.o%s;:crtend.o%s} %{shared:crtnS.o%s;:crtn.o%s}"
+ 
+ #undef TARGET_OS_CPP_BUILTINS
+ #define TARGET_OS_CPP_BUILTINS()      \
+   do {                                \
+     /* to force a strcmp for typeinfo-compares */ \
+     builtin_define ("__GXX_MERGED_TYPEINFO_NAMES=0"); \
+     builtin_define ("__GXX_TYPEINFO_EQUALITY_INLINE=0"); \
+     builtin_define_std ("m3");      \
+     builtin_define_std ("unix");      \
+     builtin_assert ("system=m3");   \
+     builtin_assert ("system=unix");   \
+   } while(0);
+ 
+ #undef LINK_GCC_C_SEQUENCE_SPEC
+ #define LINK_GCC_C_SEQUENCE_SPEC \
+   "%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}"
+ 
+ /* Use --as-needed -lgcc_s for eh support.  */
+ #ifdef HAVE_LD_AS_NEEDED
+ #define USE_LD_AS_NEEDED 1
+ #endif
+ 
+ #define USE_TM_CLONE_REGISTRY 0
+ 
diff -rcN src/gcc-org/gcc/config.gcc src/gcc/gcc/config.gcc
*** src/gcc-org/gcc/config.gcc	2020-07-11 07:48:26.137552166 +0200
--- src/gcc/gcc/config.gcc	2020-07-11 07:48:51.837716184 +0200
***************
*** 675,680 ****
--- 675,685 ----
  
  # Common parts for widely ported systems.
  case ${target} in
+ *-*-m3*)
+   gas=yes
+   gnu_ld=yes
+   default_use_cxa_atexit=yes
+   ;;
  *-*-darwin*)
    tmake_file="t-darwin "
    tm_file="${tm_file} darwin.h"
***************
*** 1033,1038 ****
--- 1038,1048 ----
  esac
  
  case ${target} in
+ x86_64-*-m3*)
+ 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h i386/x86-64.h glibc-stdint.h m3.h"
+ 	tmake_file="${tmake_file} t-svr4"
+ 	use_fixproto=yes
+ 	;;
  aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
  	tm_file="${tm_file} dbxelf.h elfos.h newlib-stdint.h"
  	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-elf-raw.h"
diff -rcN src/gcc-org/libgcc/config/t-m3 src/gcc/libgcc/config/t-m3
*** src/gcc-org/libgcc/config/t-m3	1970-01-01 01:00:00.000000000 +0100
--- src/gcc/libgcc/config/t-m3	2020-07-11 07:48:51.837716184 +0200
***************
*** 0 ****
--- 1,5 ----
+ LIBGCC2_CFLAGS += -Wl,-z,max-page-size=0x1000
+ 
+ # for some reason we need -Wl,-shared as well, i.e. -shared is not enough
+ SHLIB_LDFLAGS = -Wl,-shared -Wl,-soname,$(SHLIB_SONAME)
+ 
diff -rcN src/gcc-org/libgcc/config.host src/gcc/libgcc/config.host
*** src/gcc-org/libgcc/config.host	2020-07-11 07:48:40.100974628 +0200
--- src/gcc/libgcc/config.host	2020-07-11 07:48:51.837716184 +0200
***************
*** 359,364 ****
--- 359,368 ----
  esac
  
  case ${host} in
+ x86_64-*-m3*)
+     extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o"
+     tmake_file="${tmake_file} t-m3 i386/t-crtstuff t-slibgcc t-libgcc-pic t-crtstuff-pic"
+     ;;
  aarch64*-*-elf | aarch64*-*-rtems*)
  	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
  	extra_parts="$extra_parts crtfastmath.o"
diff -rcN src/gcc-org/libstdc++-v3/configure src/gcc/libstdc++-v3/configure
*** src/gcc-org/libstdc++-v3/configure	2020-07-11 07:48:24.047538822 +0200
--- src/gcc/libstdc++-v3/configure	2020-07-11 07:48:51.854382957 +0200
***************
*** 11603,11608 ****
--- 11603,11616 ----
    shlibpath_var=LD_LIBRARY_PATH
    ;;
  
+ m3*)
+   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+   need_lib_prefix=no
+   need_version=no
+   dynamic_linker='/bin/dynlink'
+   hardcode_into_libs=yes
+   ;;
+ 
  *)
    dynamic_linker=no
    ;;
***************
*** 13715,13720 ****
--- 13723,13732 ----
  	esac
        ;;
  
+       m3*)
+         ld_shlibs_CXX=yes
+         ;;
+ 
        tandem*)
          case $cc_basename in
            NCC*)
***************
*** 15108,15113 ****
--- 15120,15133 ----
    dynamic_linker='GNU/Linux ld.so'
    ;;
  
+ m3*)
+   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+   need_lib_prefix=no
+   need_version=no
+   dynamic_linker='/bin/dynlink'
+   hardcode_into_libs=yes
+   ;;
+ 
  netbsd*)
    version_type=sunos
    need_lib_prefix=no
diff -rcN src/gcc-org/libstdc++-v3/libsupc++/eh_term_handler.h src/gcc/libstdc++-v3/libsupc++/eh_term_handler.h
*** src/gcc-org/libstdc++-v3/libsupc++/eh_term_handler.h	2020-07-11 07:48:24.210873198 +0200
--- src/gcc/libstdc++-v3/libsupc++/eh_term_handler.h	2020-07-11 07:50:42.275086428 +0200
***************
*** 31,37 ****
     --disable-libstdcxx-verbose and rebuilding the library.
     In a freestanding environment, we default to this latter approach.  */
  
! #if _GLIBCXX_HOSTED && _GLIBCXX_VERBOSE && __cpp_exceptions
  # define _GLIBCXX_DEFAULT_TERM_HANDLER __gnu_cxx::__verbose_terminate_handler
  #else
  # include <cstdlib>
--- 31,37 ----
     --disable-libstdcxx-verbose and rebuilding the library.
     In a freestanding environment, we default to this latter approach.  */
  
! #if 1 // _GLIBCXX_HOSTED && _GLIBCXX_VERBOSE && __cpp_exceptions
  # define _GLIBCXX_DEFAULT_TERM_HANDLER __gnu_cxx::__verbose_terminate_handler
  #else
  # include <cstdlib>
diff -rcN src/gcc-org/libstdc++-v3/libsupc++/vterminate.cc src/gcc/libstdc++-v3/libsupc++/vterminate.cc
*** src/gcc-org/libstdc++-v3/libsupc++/vterminate.cc	2020-07-11 07:48:24.227539971 +0200
--- src/gcc/libstdc++-v3/libsupc++/vterminate.cc	2020-07-11 07:48:51.857716311 +0200
***************
*** 24,35 ****
  
  #include <bits/c++config.h>
  
! #if _GLIBCXX_HOSTED
  #include <cstdlib>
  #include <exception>
  #include <bits/exception_defines.h>
  #include <cxxabi.h>
! # include <cstdio>
  
  using namespace std;
  using namespace abi;
--- 24,40 ----
  
  #include <bits/c++config.h>
  
! #if 1 // _GLIBCXX_HOSTED
  #include <cstdlib>
  #include <exception>
  #include <bits/exception_defines.h>
  #include <cxxabi.h>
! // don't include cstdio here because thats too much trouble
! //# include <cstdio>
! extern "C" void abort(void);
! extern "C" int fputs(const char*,void*);
! extern "C" void *free(void*);
! extern void *stderr;
  
  using namespace std;
  using namespace abi;
***************
*** 61,68 ****
  	{
  	  int status = -1;
  	  char *dem = 0;
! 	  
! 	  dem = __cxa_demangle(name, 0, 0, &status);
  
  	  fputs("terminate called after throwing an instance of '", stderr);
  	  if (status == 0)
--- 66,73 ----
  	{
  	  int status = -1;
  	  char *dem = 0;
! 
! 	  // dem = __cxa_demangle(name, 0, 0, &status);
  
  	  fputs("terminate called after throwing an instance of '", stderr);
  	  if (status == 0)
